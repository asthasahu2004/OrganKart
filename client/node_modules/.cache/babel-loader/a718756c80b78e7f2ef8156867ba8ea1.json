{"ast":null,"code":"import { DashboardData, postUploadImage, getSliderImages, postDeleteImage } from \"./FetchApi\";\nimport { getAllOrder } from \"../orders/FetchApi.js\";\nexport const GetAllData = async dispatch => {\n  try {\n    console.log(\"Fetching dashboard data...\"); // Debug log\n    const responseData = await DashboardData();\n    console.log(\"Dashboard data received:\", responseData); // Debug log\n\n    // Handle different response structures\n    let dataToDispatch;\n    if (responseData && responseData.success && responseData.data) {\n      // If response has success flag and data property\n      dataToDispatch = responseData.data;\n    } else if (responseData && typeof responseData === 'object') {\n      // If response is directly the data object\n      dataToDispatch = responseData;\n    } else {\n      // Fallback to empty data\n      dataToDispatch = {\n        Users: 0,\n        Orders: 0,\n        Products: 0,\n        Categories: 0\n      };\n    }\n\n    // Ensure all required fields exist\n    const finalData = {\n      Users: dataToDispatch.Users || dataToDispatch.users || 0,\n      Orders: dataToDispatch.Orders || dataToDispatch.orders || 0,\n      Products: dataToDispatch.Products || dataToDispatch.products || 0,\n      Categories: dataToDispatch.Categories || dataToDispatch.categories || 0\n    };\n    console.log(\"Final data being dispatched:\", finalData); // Debug log\n    dispatch({\n      type: \"totalData\",\n      payload: finalData\n    });\n  } catch (error) {\n    var _error$response;\n    console.error(\"Error fetching dashboard data:\", error);\n    console.error(\"Error details:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n\n    // Dispatch empty data to prevent undefined errors\n    dispatch({\n      type: \"totalData\",\n      payload: {\n        Users: 0,\n        Orders: 0,\n        Products: 0,\n        Categories: 0\n      }\n    });\n  }\n};\nexport const todayAllOrders = async dispatch => {\n  try {\n    const responseData = await getAllOrder();\n    if (responseData) {\n      dispatch({\n        type: \"totalOrders\",\n        payload: responseData\n      });\n    }\n  } catch (error) {\n    console.error(\"Error fetching orders:\", error);\n    dispatch({\n      type: \"totalOrders\",\n      payload: {\n        Orders: []\n      }\n    });\n  }\n};\nexport const sliderImages = async dispatch => {\n  try {\n    const responseData = await getSliderImages();\n    if (responseData && responseData.Images) {\n      dispatch({\n        type: \"sliderImages\",\n        payload: responseData.Images\n      });\n    } else if (responseData && Array.isArray(responseData)) {\n      dispatch({\n        type: \"sliderImages\",\n        payload: responseData\n      });\n    }\n  } catch (error) {\n    console.error(\"Error fetching slider images:\", error);\n    dispatch({\n      type: \"sliderImages\",\n      payload: []\n    });\n  }\n};\nexport const deleteImage = async (id, dispatch) => {\n  dispatch({\n    type: \"imageUpload\",\n    payload: true\n  });\n  try {\n    const responseData = await postDeleteImage(id);\n    if (responseData && responseData.success) {\n      setTimeout(() => {\n        sliderImages(dispatch);\n        dispatch({\n          type: \"imageUpload\",\n          payload: false\n        });\n      }, 1000);\n    } else {\n      dispatch({\n        type: \"imageUpload\",\n        payload: false\n      });\n    }\n  } catch (error) {\n    console.error(\"Error deleting image:\", error);\n    dispatch({\n      type: \"imageUpload\",\n      payload: false\n    });\n  }\n};\nexport const uploadImage = async (image, dispatch) => {\n  dispatch({\n    type: \"imageUpload\",\n    payload: true\n  });\n  const formData = new FormData();\n  formData.append(\"image\", image);\n  console.log(\"Uploading image:\", formData.get(\"image\"));\n  try {\n    const responseData = await postUploadImage(formData);\n    if (responseData && responseData.success) {\n      setTimeout(() => {\n        dispatch({\n          type: \"imageUpload\",\n          payload: false\n        });\n        sliderImages(dispatch);\n      }, 1000);\n    } else {\n      dispatch({\n        type: \"imageUpload\",\n        payload: false\n      });\n    }\n  } catch (error) {\n    console.error(\"Error uploading image:\", error);\n    dispatch({\n      type: \"imageUpload\",\n      payload: false\n    });\n  }\n};","map":{"version":3,"names":["DashboardData","postUploadImage","getSliderImages","postDeleteImage","getAllOrder","GetAllData","dispatch","console","log","responseData","dataToDispatch","success","data","Users","Orders","Products","Categories","finalData","users","orders","products","categories","type","payload","error","_error$response","response","message","todayAllOrders","sliderImages","Images","Array","isArray","deleteImage","id","setTimeout","uploadImage","image","formData","FormData","append","get"],"sources":["C:/Users/Lenovo/Downloads/OrganEase-main/client/src/components/admin/dashboardAdmin/Action.js"],"sourcesContent":["import {\n  DashboardData,\n  postUploadImage,\n  getSliderImages,\n  postDeleteImage,\n} from \"./FetchApi\";\nimport { getAllOrder } from \"../orders/FetchApi.js\";\n\nexport const GetAllData = async (dispatch) => {\n  try {\n    console.log(\"Fetching dashboard data...\"); // Debug log\n    const responseData = await DashboardData();\n    console.log(\"Dashboard data received:\", responseData); // Debug log\n    \n    // Handle different response structures\n    let dataToDispatch;\n    \n    if (responseData && responseData.success && responseData.data) {\n      // If response has success flag and data property\n      dataToDispatch = responseData.data;\n    } else if (responseData && typeof responseData === 'object') {\n      // If response is directly the data object\n      dataToDispatch = responseData;\n    } else {\n      // Fallback to empty data\n      dataToDispatch = { Users: 0, Orders: 0, Products: 0, Categories: 0 };\n    }\n    \n    // Ensure all required fields exist\n    const finalData = {\n      Users: dataToDispatch.Users || dataToDispatch.users || 0,\n      Orders: dataToDispatch.Orders || dataToDispatch.orders || 0,\n      Products: dataToDispatch.Products || dataToDispatch.products || 0,\n      Categories: dataToDispatch.Categories || dataToDispatch.categories || 0,\n    };\n    \n    console.log(\"Final data being dispatched:\", finalData); // Debug log\n    dispatch({ type: \"totalData\", payload: finalData });\n    \n  } catch (error) {\n    console.error(\"Error fetching dashboard data:\", error);\n    console.error(\"Error details:\", error.response?.data || error.message);\n    \n    // Dispatch empty data to prevent undefined errors\n    dispatch({ \n      type: \"totalData\", \n      payload: { Users: 0, Orders: 0, Products: 0, Categories: 0 } \n    });\n  }\n};\n\nexport const todayAllOrders = async (dispatch) => {\n  try {\n    const responseData = await getAllOrder();\n    if (responseData) {\n      dispatch({ type: \"totalOrders\", payload: responseData });\n    }\n  } catch (error) {\n    console.error(\"Error fetching orders:\", error);\n    dispatch({ type: \"totalOrders\", payload: { Orders: [] } });\n  }\n};\n\nexport const sliderImages = async (dispatch) => {\n  try {\n    const responseData = await getSliderImages();\n    if (responseData && responseData.Images) {\n      dispatch({ type: \"sliderImages\", payload: responseData.Images });\n    } else if (responseData && Array.isArray(responseData)) {\n      dispatch({ type: \"sliderImages\", payload: responseData });\n    }\n  } catch (error) {\n    console.error(\"Error fetching slider images:\", error);\n    dispatch({ type: \"sliderImages\", payload: [] });\n  }\n};\n\nexport const deleteImage = async (id, dispatch) => {\n  dispatch({ type: \"imageUpload\", payload: true });\n  try {\n    const responseData = await postDeleteImage(id);\n    if (responseData && responseData.success) {\n      setTimeout(() => {\n        sliderImages(dispatch);\n        dispatch({ type: \"imageUpload\", payload: false });\n      }, 1000);\n    } else {\n      dispatch({ type: \"imageUpload\", payload: false });\n    }\n  } catch (error) {\n    console.error(\"Error deleting image:\", error);\n    dispatch({ type: \"imageUpload\", payload: false });\n  }\n};\n\nexport const uploadImage = async (image, dispatch) => {\n  dispatch({ type: \"imageUpload\", payload: true });\n  const formData = new FormData();\n  formData.append(\"image\", image);\n  console.log(\"Uploading image:\", formData.get(\"image\"));\n  \n  try {\n    const responseData = await postUploadImage(formData);\n    if (responseData && responseData.success) {\n      setTimeout(() => {\n        dispatch({ type: \"imageUpload\", payload: false });\n        sliderImages(dispatch);\n      }, 1000);\n    } else {\n      dispatch({ type: \"imageUpload\", payload: false });\n    }\n  } catch (error) {\n    console.error(\"Error uploading image:\", error);\n    dispatch({ type: \"imageUpload\", payload: false });\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}