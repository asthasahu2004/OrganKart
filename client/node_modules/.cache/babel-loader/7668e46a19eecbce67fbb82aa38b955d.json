{"ast":null,"code":"import { getAllOrder, deleteOrder } from \"./FetchApi\";\nexport const fetchData = async dispatch => {\n  try {\n    dispatch({\n      type: \"loading\",\n      payload: true\n    });\n    const responseData = await getAllOrder();\n    console.log(\"API Response:\", responseData);\n    if (responseData && responseData.Orders) {\n      dispatch({\n        type: \"fetchOrderAndChangeState\",\n        payload: responseData.Orders\n      });\n    } else if (responseData && Array.isArray(responseData)) {\n      // Handle case where API directly returns array\n      dispatch({\n        type: \"fetchOrderAndChangeState\",\n        payload: responseData\n      });\n    } else {\n      console.error(\"Invalid API response format:\", responseData);\n      dispatch({\n        type: \"fetchOrderAndChangeState\",\n        payload: []\n      });\n    }\n  } catch (error) {\n    console.error(\"Error fetching orders:\", error);\n    dispatch({\n      type: \"fetchOrderAndChangeState\",\n      payload: []\n    });\n  } finally {\n    // Always reset loading state\n    dispatch({\n      type: \"loading\",\n      payload: false\n    });\n  }\n};\n\n/* This method call the editmodal & dispatch category context */\nexport const editOrderReq = (oId, type, status, dispatch) => {\n  if (type) {\n    console.log(\"Opening update modal for order:\", oId);\n    dispatch({\n      type: \"updateOrderModalOpen\",\n      oId: oId,\n      status: status\n    });\n  }\n};\nexport const deleteOrderReq = async (oId, dispatch) => {\n  try {\n    dispatch({\n      type: \"loading\",\n      payload: true\n    });\n    const responseData = await deleteOrder(oId);\n    console.log(\"Delete response:\", responseData);\n    if (responseData && responseData.success) {\n      // Refresh the data after successful deletion\n      await fetchData(dispatch);\n    } else {\n      console.error(\"Delete failed:\", responseData);\n      dispatch({\n        type: \"loading\",\n        payload: false\n      });\n    }\n  } catch (error) {\n    console.error(\"Error deleting order:\", error);\n    dispatch({\n      type: \"loading\",\n      payload: false\n    });\n  }\n};\n\n/* Filter All Order */\nexport const filterOrder = async (type, data, dispatch, dropdown, setDropdown) => {\n  try {\n    dispatch({\n      type: \"loading\",\n      payload: true\n    });\n    const responseData = await getAllOrder();\n    if (responseData && responseData.Orders) {\n      let filteredData;\n      if (type === \"All\") {\n        filteredData = responseData.Orders;\n      } else if (type === \"Not processed\") {\n        filteredData = responseData.Orders.filter(item => item.status === \"Not processed\");\n      } else if (type === \"Under Scrutiny\") {\n        filteredData = responseData.Orders.filter(item => item.status === \"Processing\");\n      } else if (type === \"Request Accepted\") {\n        filteredData = responseData.Orders.filter(item => item.status === \"Shipped\");\n      } else if (type === \"Expired\") {\n        filteredData = responseData.Orders.filter(item => item.status === \"Delivered\");\n      } else if (type === \"Cancelled\") {\n        filteredData = responseData.Orders.filter(item => item.status === \"Cancelled\");\n      } else {\n        filteredData = responseData.Orders;\n      }\n      dispatch({\n        type: \"fetchOrderAndChangeState\",\n        payload: filteredData\n      });\n    } else {\n      console.error(\"Invalid filter response:\", responseData);\n      dispatch({\n        type: \"fetchOrderAndChangeState\",\n        payload: []\n      });\n    }\n  } catch (error) {\n    console.error(\"Error filtering orders:\", error);\n    dispatch({\n      type: \"fetchOrderAndChangeState\",\n      payload: []\n    });\n  } finally {\n    dispatch({\n      type: \"loading\",\n      payload: false\n    });\n    setDropdown(!dropdown);\n  }\n};","map":{"version":3,"names":["getAllOrder","deleteOrder","fetchData","dispatch","type","payload","responseData","console","log","Orders","Array","isArray","error","editOrderReq","oId","status","deleteOrderReq","success","filterOrder","data","dropdown","setDropdown","filteredData","filter","item"],"sources":["C:/Users/Lenovo/Downloads/OrganEase-main/client/src/components/admin/orders/Actions.js"],"sourcesContent":["import { getAllOrder, deleteOrder } from \"./FetchApi\";\n\nexport const fetchData = async (dispatch) => {\n  try {\n    dispatch({ type: \"loading\", payload: true });\n    const responseData = await getAllOrder();\n    \n    console.log(\"API Response:\", responseData);\n    \n    if (responseData && responseData.Orders) {\n      dispatch({\n        type: \"fetchOrderAndChangeState\",\n        payload: responseData.Orders,\n      });\n    } else if (responseData && Array.isArray(responseData)) {\n      // Handle case where API directly returns array\n      dispatch({\n        type: \"fetchOrderAndChangeState\",\n        payload: responseData,\n      });\n    } else {\n      console.error(\"Invalid API response format:\", responseData);\n      dispatch({\n        type: \"fetchOrderAndChangeState\",\n        payload: [],\n      });\n    }\n  } catch (error) {\n    console.error(\"Error fetching orders:\", error);\n    dispatch({\n      type: \"fetchOrderAndChangeState\",\n      payload: [],\n    });\n  } finally {\n    // Always reset loading state\n    dispatch({ type: \"loading\", payload: false });\n  }\n};\n\n/* This method call the editmodal & dispatch category context */\nexport const editOrderReq = (oId, type, status, dispatch) => {\n  if (type) {\n    console.log(\"Opening update modal for order:\", oId);\n    dispatch({ type: \"updateOrderModalOpen\", oId: oId, status: status });\n  }\n};\n\nexport const deleteOrderReq = async (oId, dispatch) => {\n  try {\n    dispatch({ type: \"loading\", payload: true });\n    const responseData = await deleteOrder(oId);\n    console.log(\"Delete response:\", responseData);\n    \n    if (responseData && responseData.success) {\n      // Refresh the data after successful deletion\n      await fetchData(dispatch);\n    } else {\n      console.error(\"Delete failed:\", responseData);\n      dispatch({ type: \"loading\", payload: false });\n    }\n  } catch (error) {\n    console.error(\"Error deleting order:\", error);\n    dispatch({ type: \"loading\", payload: false });\n  }\n};\n\n/* Filter All Order */\nexport const filterOrder = async (\n  type,\n  data,\n  dispatch,\n  dropdown,\n  setDropdown\n) => {\n  try {\n    dispatch({ type: \"loading\", payload: true });\n    const responseData = await getAllOrder();\n    \n    if (responseData && responseData.Orders) {\n      let filteredData;\n      \n      if (type === \"All\") {\n        filteredData = responseData.Orders;\n      } else if (type === \"Not processed\") {\n        filteredData = responseData.Orders.filter(\n          (item) => item.status === \"Not processed\"\n        );\n      } else if (type === \"Under Scrutiny\") {\n        filteredData = responseData.Orders.filter(\n          (item) => item.status === \"Processing\"\n        );\n      } else if (type === \"Request Accepted\") {\n        filteredData = responseData.Orders.filter(\n          (item) => item.status === \"Shipped\"\n        );\n      } else if (type === \"Expired\") {\n        filteredData = responseData.Orders.filter(\n          (item) => item.status === \"Delivered\"\n        );\n      } else if (type === \"Cancelled\") {\n        filteredData = responseData.Orders.filter(\n          (item) => item.status === \"Cancelled\"\n        );\n      } else {\n        filteredData = responseData.Orders;\n      }\n      \n      dispatch({ type: \"fetchOrderAndChangeState\", payload: filteredData });\n    } else {\n      console.error(\"Invalid filter response:\", responseData);\n      dispatch({ type: \"fetchOrderAndChangeState\", payload: [] });\n    }\n  } catch (error) {\n    console.error(\"Error filtering orders:\", error);\n    dispatch({ type: \"fetchOrderAndChangeState\", payload: [] });\n  } finally {\n    dispatch({ type: \"loading\", payload: false });\n    setDropdown(!dropdown);\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}