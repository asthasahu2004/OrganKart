{"ast":null,"code":"import axios from \"axios\";\nconst apiURL = process.env.REACT_APP_API_URL || \"http://localhost:8000\";\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: apiURL,\n  timeout: 10000,\n  // 10 second timeout\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add response interceptor for consistent error handling\napi.interceptors.response.use(response => response, error => {\n  console.error('API Error:', error);\n  if (error.response) {\n    // Server responded with error status\n    console.error('Response error:', error.response.data);\n  } else if (error.request) {\n    // Request was made but no response received\n    console.error('Network error:', error.request);\n  } else {\n    // Something else happened\n    console.error('Request setup error:', error.message);\n  }\n  throw error;\n});\nexport const getAllOrder = async () => {\n  try {\n    const res = await api.get(\"/api/order/get-all-orders\");\n    return res.data;\n  } catch (error) {\n    console.error(\"Error fetching orders:\", error);\n    // Return empty structure to prevent app crashes\n    return {\n      Orders: []\n    };\n  }\n};\nexport const editCategory = async (oId, status) => {\n  if (!oId || !status) {\n    console.error(\"Missing required parameters for order update\");\n    return {\n      error: \"Missing required parameters\"\n    };\n  }\n  const data = {\n    oId,\n    status\n  };\n  console.log(\"Updating order with data:\", data);\n  try {\n    const res = await api.post(\"/api/order/update-order\", data);\n    return res.data;\n  } catch (error) {\n    console.error(\"Error updating order:\", error);\n    return {\n      error: \"Failed to update order\"\n    };\n  }\n};\nexport const deleteOrder = async oId => {\n  if (!oId) {\n    console.error(\"Missing order ID for deletion\");\n    return {\n      error: \"Missing order ID\"\n    };\n  }\n  const data = {\n    oId\n  };\n  console.log(\"Deleting order with ID:\", oId);\n  try {\n    const res = await api.post(\"/api/order/delete-order\", data);\n    return res.data;\n  } catch (error) {\n    console.error(\"Error deleting order:\", error);\n    return {\n      error: \"Failed to delete order\"\n    };\n  }\n};","map":{"version":3,"names":["axios","apiURL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","response","use","error","console","data","request","message","getAllOrder","res","get","Orders","editCategory","oId","status","log","post","deleteOrder"],"sources":["C:/Users/Lenovo/Downloads/OrganEase-main/client/src/components/admin/orders/FetchApi.js"],"sourcesContent":["import axios from \"axios\";\nconst apiURL = process.env.REACT_APP_API_URL || \"http://localhost:8000\";\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: apiURL,\n  timeout: 10000, // 10 second timeout\n  headers: {\n    'Content-Type': 'application/json',\n  }\n});\n\n// Add response interceptor for consistent error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error('API Error:', error);\n    if (error.response) {\n      // Server responded with error status\n      console.error('Response error:', error.response.data);\n    } else if (error.request) {\n      // Request was made but no response received\n      console.error('Network error:', error.request);\n    } else {\n      // Something else happened\n      console.error('Request setup error:', error.message);\n    }\n    throw error;\n  }\n);\n\nexport const getAllOrder = async () => {\n  try {\n    const res = await api.get(\"/api/order/get-all-orders\");\n    return res.data;\n  } catch (error) {\n    console.error(\"Error fetching orders:\", error);\n    // Return empty structure to prevent app crashes\n    return { Orders: [] };\n  }\n};\n\nexport const editCategory = async (oId, status) => {\n  if (!oId || !status) {\n    console.error(\"Missing required parameters for order update\");\n    return { error: \"Missing required parameters\" };\n  }\n\n  const data = { oId, status };\n  console.log(\"Updating order with data:\", data);\n  \n  try {\n    const res = await api.post(\"/api/order/update-order\", data);\n    return res.data;\n  } catch (error) {\n    console.error(\"Error updating order:\", error);\n    return { error: \"Failed to update order\" };\n  }\n};\n\nexport const deleteOrder = async (oId) => {\n  if (!oId) {\n    console.error(\"Missing order ID for deletion\");\n    return { error: \"Missing order ID\" };\n  }\n\n  const data = { oId };\n  console.log(\"Deleting order with ID:\", oId);\n  \n  try {\n    const res = await api.post(\"/api/order/delete-order\", data);\n    return res.data;\n  } catch (error) {\n    console.error(\"Error deleting order:\", error);\n    return { error: \"Failed to delete order\" };\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}