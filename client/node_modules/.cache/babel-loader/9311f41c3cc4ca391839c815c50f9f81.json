{"ast":null,"code":"import { getAllOrder, deleteOrder } from \"./FetchApi\";\nexport const fetchData = async dispatch => {\n  try {\n    dispatch({\n      type: \"loading\",\n      payload: true\n    });\n    const responseData = await getAllOrder();\n    console.log(\"API Response:\", responseData); // Debug log\n\n    // Add a small delay to show loading state\n    setTimeout(() => {\n      if (responseData && responseData.Orders) {\n        dispatch({\n          type: \"fetchOrderAndChangeState\",\n          payload: responseData.Orders\n        });\n      } else if (responseData && Array.isArray(responseData)) {\n        // Handle case where API directly returns array\n        dispatch({\n          type: \"fetchOrderAndChangeState\",\n          payload: responseData\n        });\n      } else {\n        console.error(\"Invalid API response format:\", responseData);\n        dispatch({\n          type: \"fetchOrderAndChangeState\",\n          payload: []\n        });\n      }\n      dispatch({\n        type: \"loading\",\n        payload: false\n      });\n    }, 1000);\n  } catch (error) {\n    console.error(\"Error fetching orders:\", error);\n    dispatch({\n      type: \"loading\",\n      payload: false\n    });\n    dispatch({\n      type: \"fetchOrderAndChangeState\",\n      payload: []\n    });\n  }\n};\n\n/* This method call the editmodal & dispatch category context */\nexport const editOrderReq = (oId, type, status, dispatch) => {\n  if (type) {\n    console.log(\"Opening update modal for order:\", oId);\n    dispatch({\n      type: \"updateOrderModalOpen\",\n      oId: oId,\n      status: status\n    });\n  }\n};\nexport const deleteOrderReq = async (oId, dispatch) => {\n  try {\n    const responseData = await deleteOrder(oId);\n    console.log(\"Delete response:\", responseData);\n    if (responseData && responseData.success) {\n      // Refresh the data after successful deletion\n      fetchData(dispatch);\n    } else {\n      console.error(\"Delete failed:\", responseData);\n    }\n  } catch (error) {\n    console.error(\"Error deleting order:\", error);\n  }\n};\n\n/* Filter All Order */\nexport const filterOrder = async (type, data, dispatch, dropdown, setDropdown) => {\n  try {\n    const responseData = await getAllOrder();\n    if (responseData && responseData.Orders) {\n      let filteredData;\n      if (type === \"All\") {\n        filteredData = responseData.Orders;\n      } else if (type === \"Not processed\") {\n        filteredData = responseData.Orders.filter(item => item.status === \"Not processed\");\n      } else if (type === \"Under Scrutiny\") {\n        filteredData = responseData.Orders.filter(item => item.status === \"Processing\");\n      } else if (type === \"Request Accepted\") {\n        filteredData = responseData.Orders.filter(item => item.status === \"Shipped\");\n      } else if (type === \"Expired\") {\n        filteredData = responseData.Orders.filter(item => item.status === \"Delivered\");\n      } else if (type === \"Cancelled\") {\n        filteredData = responseData.Orders.filter(item => item.status === \"Cancelled\");\n      } else {\n        filteredData = responseData.Orders;\n      }\n      dispatch({\n        type: \"fetchOrderAndChangeState\",\n        payload: filteredData\n      });\n      setDropdown(!dropdown);\n    } else {\n      console.error(\"Invalid filter response:\", responseData);\n      dispatch({\n        type: \"fetchOrderAndChangeState\",\n        payload: []\n      });\n      setDropdown(!dropdown);\n    }\n  } catch (error) {\n    console.error(\"Error filtering orders:\", error);\n    dispatch({\n      type: \"fetchOrderAndChangeState\",\n      payload: []\n    });\n    setDropdown(!dropdown);\n  }\n};","map":{"version":3,"names":["getAllOrder","deleteOrder","fetchData","dispatch","type","payload","responseData","console","log","setTimeout","Orders","Array","isArray","error","editOrderReq","oId","status","deleteOrderReq","success","filterOrder","data","dropdown","setDropdown","filteredData","filter","item"],"sources":["C:/Users/Lenovo/Downloads/OrganEase-main/client/src/components/admin/orders/Actions.js"],"sourcesContent":["import { getAllOrder, deleteOrder } from \"./FetchApi\";\n\nexport const fetchData = async (dispatch) => {\n  try {\n    dispatch({ type: \"loading\", payload: true });\n    const responseData = await getAllOrder();\n    \n    console.log(\"API Response:\", responseData); // Debug log\n    \n    // Add a small delay to show loading state\n    setTimeout(() => {\n      if (responseData && responseData.Orders) {\n        dispatch({\n          type: \"fetchOrderAndChangeState\",\n          payload: responseData.Orders,\n        });\n      } else if (responseData && Array.isArray(responseData)) {\n        // Handle case where API directly returns array\n        dispatch({\n          type: \"fetchOrderAndChangeState\",\n          payload: responseData,\n        });\n      } else {\n        console.error(\"Invalid API response format:\", responseData);\n        dispatch({\n          type: \"fetchOrderAndChangeState\",\n          payload: [],\n        });\n      }\n      dispatch({ type: \"loading\", payload: false });\n    }, 1000);\n  } catch (error) {\n    console.error(\"Error fetching orders:\", error);\n    dispatch({ type: \"loading\", payload: false });\n    dispatch({\n      type: \"fetchOrderAndChangeState\",\n      payload: [],\n    });\n  }\n};\n\n/* This method call the editmodal & dispatch category context */\nexport const editOrderReq = (oId, type, status, dispatch) => {\n  if (type) {\n    console.log(\"Opening update modal for order:\", oId);\n    dispatch({ type: \"updateOrderModalOpen\", oId: oId, status: status });\n  }\n};\n\nexport const deleteOrderReq = async (oId, dispatch) => {\n  try {\n    const responseData = await deleteOrder(oId);\n    console.log(\"Delete response:\", responseData);\n    \n    if (responseData && responseData.success) {\n      // Refresh the data after successful deletion\n      fetchData(dispatch);\n    } else {\n      console.error(\"Delete failed:\", responseData);\n    }\n  } catch (error) {\n    console.error(\"Error deleting order:\", error);\n  }\n};\n\n/* Filter All Order */\nexport const filterOrder = async (\n  type,\n  data,\n  dispatch,\n  dropdown,\n  setDropdown\n) => {\n  try {\n    const responseData = await getAllOrder();\n    \n    if (responseData && responseData.Orders) {\n      let filteredData;\n      \n      if (type === \"All\") {\n        filteredData = responseData.Orders;\n      } else if (type === \"Not processed\") {\n        filteredData = responseData.Orders.filter(\n          (item) => item.status === \"Not processed\"\n        );\n      } else if (type === \"Under Scrutiny\") {\n        filteredData = responseData.Orders.filter(\n          (item) => item.status === \"Processing\"\n        );\n      } else if (type === \"Request Accepted\") {\n        filteredData = responseData.Orders.filter(\n          (item) => item.status === \"Shipped\"\n        );\n      } else if (type === \"Expired\") {\n        filteredData = responseData.Orders.filter(\n          (item) => item.status === \"Delivered\"\n        );\n      } else if (type === \"Cancelled\") {\n        filteredData = responseData.Orders.filter(\n          (item) => item.status === \"Cancelled\"\n        );\n      } else {\n        filteredData = responseData.Orders;\n      }\n      \n      dispatch({ type: \"fetchOrderAndChangeState\", payload: filteredData });\n      setDropdown(!dropdown);\n    } else {\n      console.error(\"Invalid filter response:\", responseData);\n      dispatch({ type: \"fetchOrderAndChangeState\", payload: [] });\n      setDropdown(!dropdown);\n    }\n  } catch (error) {\n    console.error(\"Error filtering orders:\", error);\n    dispatch({ type: \"fetchOrderAndChangeState\", payload: [] });\n    setDropdown(!dropdown);\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}