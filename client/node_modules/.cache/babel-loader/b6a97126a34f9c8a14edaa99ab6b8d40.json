{"ast":null,"code":"import axios from \"axios\";\nconst apiURL = process.env.REACT_APP_API_URL || \"http://localhost:8000\";\n\n// Add default timeout and better error handling\nconst axiosInstance = axios.create({\n  timeout: 15000,\n  // 15 second timeout (increased from 10)\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor for debugging\naxiosInstance.interceptors.request.use(config => {\n  var _config$method;\n  console.log('API Request:', (_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase(), config.url);\n  console.log('Request data:', config.data);\n  console.log('Request headers:', config.headers);\n  return config;\n}, error => {\n  console.error('Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor for debugging\naxiosInstance.interceptors.response.use(response => {\n  console.log('API Response:', response.status, response.config.url);\n  console.log('Response data:', response.data);\n  return response;\n}, error => {\n  var _error$response, _error$config, _error$response2;\n  console.error('Response Error:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status, (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url);\n  console.error('Response data:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n  return Promise.reject(error);\n});\nexport const DashboardData = async () => {\n  try {\n    const endpoint = `${apiURL}/api/customize/dashboard-data`;\n    console.log(\"Making dashboard API call to:\", endpoint);\n\n    // Check if the API URL is properly set\n    if (!apiURL || apiURL === \"undefined\") {\n      throw new Error(\"API URL is not properly configured. Check your REACT_APP_API_URL environment variable.\");\n    }\n    const res = await axiosInstance.post(endpoint);\n    console.log(\"Dashboard API Response:\", res.data);\n    console.log(\"Response status:\", res.status);\n    console.log(\"Response headers:\", res.headers);\n\n    // Validate response structure\n    if (!res.data) {\n      throw new Error(\"No data received from API\");\n    }\n    return res.data;\n  } catch (error) {\n    var _error$response3, _error$response4, _error$response5, _error$config2, _error$response6, _error$response7;\n    console.error(\"Dashboard API Error Details:\");\n    console.error(\"- Error type:\", error.name);\n    console.error(\"- Status:\", (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status);\n    console.error(\"- Status Text:\", (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.statusText);\n    console.error(\"- Data:\", (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data);\n    console.error(\"- Message:\", error.message);\n    console.error(\"- URL:\", (_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.url);\n    console.error(\"- Code:\", error.code);\n\n    // Check if it's a network error\n    if (error.code === 'ECONNABORTED') {\n      throw new Error('Request timeout - please check your connection and try again');\n    }\n\n    // Check if it's a network connectivity issue\n    if (error.code === 'ENOTFOUND' || error.code === 'ECONNREFUSED') {\n      throw new Error(`Cannot connect to server at ${apiURL}. Please check if the server is running.`);\n    }\n\n    // For server errors (5xx)\n    if (((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status) >= 500) {\n      var _error$response$data;\n      throw new Error(`Server error (${error.response.status}): ${((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Internal server error'}`);\n    }\n\n    // For client errors (4xx)\n    if (((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.status) >= 400) {\n      var _error$response$data2;\n      throw new Error(`Client error (${error.response.status}): ${((_error$response$data2 = error.response.data) === null || _error$response$data2 === void 0 ? void 0 : _error$response$data2.message) || 'Bad request'}`);\n    }\n\n    // For any other errors\n    throw new Error(error.message || 'An unexpected error occurred');\n  }\n};\nexport const getSliderImages = async () => {\n  try {\n    const endpoint = `${apiURL}/api/customize/get-slide-image`;\n    console.log(\"Making slider images API call to:\", endpoint);\n    const res = await axiosInstance.get(endpoint);\n    console.log(\"Slider images API response:\", res.data);\n    return res.data;\n  } catch (error) {\n    var _error$response8;\n    console.error(\"Get Slider Images Error:\", ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error.message);\n    throw error;\n  }\n};\nexport const postUploadImage = async formData => {\n  try {\n    const endpoint = `${apiURL}/api/customize/upload-slide-image`;\n    console.log(\"Making upload image API call to:\", endpoint);\n    const res = await axiosInstance.post(endpoint, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      timeout: 30000 // 30 seconds for file upload\n    });\n    console.log(\"Upload image API response:\", res.data);\n    return res.data;\n  } catch (error) {\n    var _error$response9;\n    console.error(\"Upload Image Error:\", ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message);\n    throw error;\n  }\n};\nexport const postDeleteImage = async id => {\n  try {\n    const endpoint = `${apiURL}/api/customize/delete-slide-image`;\n    console.log(\"Making delete image API call to:\", endpoint);\n    const res = await axiosInstance.post(endpoint, {\n      id\n    });\n    console.log(\"Delete image API response:\", res.data);\n    return res.data;\n  } catch (error) {\n    var _error$response0;\n    console.error(\"Delete Image Error:\", ((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : _error$response0.data) || error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","apiURL","process","env","REACT_APP_API_URL","axiosInstance","create","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","data","error","Promise","reject","response","status","_error$response","_error$config","_error$response2","DashboardData","endpoint","Error","res","post","_error$response3","_error$response4","_error$response5","_error$config2","_error$response6","_error$response7","name","statusText","message","code","_error$response$data","_error$response$data2","getSliderImages","get","_error$response8","postUploadImage","formData","_error$response9","postDeleteImage","id","_error$response0"],"sources":["C:/Users/Lenovo/Downloads/OrganEase-main/client/src/components/admin/dashboardAdmin/FetchApi.js"],"sourcesContent":["import axios from \"axios\";\n\nconst apiURL = process.env.REACT_APP_API_URL || \"http://localhost:8000\";\n\n// Add default timeout and better error handling\nconst axiosInstance = axios.create({\n  timeout: 15000, // 15 second timeout (increased from 10)\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add request interceptor for debugging\naxiosInstance.interceptors.request.use(\n  (config) => {\n    console.log('API Request:', config.method?.toUpperCase(), config.url);\n    console.log('Request data:', config.data);\n    console.log('Request headers:', config.headers);\n    return config;\n  },\n  (error) => {\n    console.error('Request Error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor for debugging\naxiosInstance.interceptors.response.use(\n  (response) => {\n    console.log('API Response:', response.status, response.config.url);\n    console.log('Response data:', response.data);\n    return response;\n  },\n  (error) => {\n    console.error('Response Error:', error.response?.status, error.config?.url);\n    console.error('Response data:', error.response?.data);\n    return Promise.reject(error);\n  }\n);\n\nexport const DashboardData = async () => {\n  try {\n    const endpoint = `${apiURL}/api/customize/dashboard-data`;\n    console.log(\"Making dashboard API call to:\", endpoint);\n    \n    // Check if the API URL is properly set\n    if (!apiURL || apiURL === \"undefined\") {\n      throw new Error(\"API URL is not properly configured. Check your REACT_APP_API_URL environment variable.\");\n    }\n    \n    const res = await axiosInstance.post(endpoint);\n    \n    console.log(\"Dashboard API Response:\", res.data);\n    console.log(\"Response status:\", res.status);\n    console.log(\"Response headers:\", res.headers);\n    \n    // Validate response structure\n    if (!res.data) {\n      throw new Error(\"No data received from API\");\n    }\n    \n    return res.data;\n  } catch (error) {\n    console.error(\"Dashboard API Error Details:\");\n    console.error(\"- Error type:\", error.name);\n    console.error(\"- Status:\", error.response?.status);\n    console.error(\"- Status Text:\", error.response?.statusText);\n    console.error(\"- Data:\", error.response?.data);\n    console.error(\"- Message:\", error.message);\n    console.error(\"- URL:\", error.config?.url);\n    console.error(\"- Code:\", error.code);\n    \n    // Check if it's a network error\n    if (error.code === 'ECONNABORTED') {\n      throw new Error('Request timeout - please check your connection and try again');\n    }\n    \n    // Check if it's a network connectivity issue\n    if (error.code === 'ENOTFOUND' || error.code === 'ECONNREFUSED') {\n      throw new Error(`Cannot connect to server at ${apiURL}. Please check if the server is running.`);\n    }\n    \n    // For server errors (5xx)\n    if (error.response?.status >= 500) {\n      throw new Error(`Server error (${error.response.status}): ${error.response.data?.message || 'Internal server error'}`);\n    }\n    \n    // For client errors (4xx)\n    if (error.response?.status >= 400) {\n      throw new Error(`Client error (${error.response.status}): ${error.response.data?.message || 'Bad request'}`);\n    }\n    \n    // For any other errors\n    throw new Error(error.message || 'An unexpected error occurred');\n  }\n};\n\nexport const getSliderImages = async () => {\n  try {\n    const endpoint = `${apiURL}/api/customize/get-slide-image`;\n    console.log(\"Making slider images API call to:\", endpoint);\n    \n    const res = await axiosInstance.get(endpoint);\n    console.log(\"Slider images API response:\", res.data);\n    \n    return res.data;\n  } catch (error) {\n    console.error(\"Get Slider Images Error:\", error.response?.data || error.message);\n    throw error;\n  }\n};\n\nexport const postUploadImage = async (formData) => {\n  try {\n    const endpoint = `${apiURL}/api/customize/upload-slide-image`;\n    console.log(\"Making upload image API call to:\", endpoint);\n    \n    const res = await axiosInstance.post(endpoint, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      timeout: 30000, // 30 seconds for file upload\n    });\n    \n    console.log(\"Upload image API response:\", res.data);\n    return res.data;\n  } catch (error) {\n    console.error(\"Upload Image Error:\", error.response?.data || error.message);\n    throw error;\n  }\n};\n\nexport const postDeleteImage = async (id) => {\n  try {\n    const endpoint = `${apiURL}/api/customize/delete-slide-image`;\n    console.log(\"Making delete image API call to:\", endpoint);\n    \n    const res = await axiosInstance.post(endpoint, { id });\n    console.log(\"Delete image API response:\", res.data);\n    \n    return res.data;\n  } catch (error) {\n    console.error(\"Delete Image Error:\", error.response?.data || error.message);\n    throw error;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}