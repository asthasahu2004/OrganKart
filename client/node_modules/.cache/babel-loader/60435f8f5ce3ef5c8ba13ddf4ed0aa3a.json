{"ast":null,"code":"import axios from \"axios\";\nconst apiURL = process.env.REACT_APP_API_URL;\nexport const getAllProduct = async () => {\n  try {\n    let res = await axios.get(`${apiURL}/api/product/all-product`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPorductImage = async _ref => {\n  let {\n    pImage\n  } = _ref;\n  /* Most important part for uploading multiple image  */\n  let formData = new FormData();\n  for (const file of pImage) {\n    formData.append(\"pImage\", file);\n  }\n  /* Most important part for uploading multiple image  */\n};\nexport const createProduct = async _ref2 => {\n  let {\n    pName,\n    pDescription,\n    pImage,\n    pStatus,\n    pCategory,\n    pQuantity,\n    pPrice,\n    pOffer\n  } = _ref2;\n  /* Most important part for uploading multiple image  */\n  let formData = new FormData();\n  for (const file of pImage) {\n    formData.append(\"pImage\", file);\n  }\n  /* Most important part for uploading multiple image  */\n  formData.append(\"pName\", pName);\n  formData.append(\"pDescription\", pDescription);\n  formData.append(\"pStatus\", pStatus);\n  formData.append(\"pCategory\", pCategory);\n  formData.append(\"pQuantity\", pQuantity);\n  formData.append(\"pPrice\", pPrice);\n  formData.append(\"pOffer\", pOffer);\n  try {\n    let res = await axios.post(`${apiURL}/api/product/add-product`, formData);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const editProduct = async product => {\n  console.log(product);\n  /* Most important part for updating multiple image  */\n  let formData = new FormData();\n  if (product.pEditImages) {\n    for (const file of product.pEditImages) {\n      formData.append(\"pEditImages\", file);\n    }\n  }\n  /* Most important part for updating multiple image  */\n  formData.append(\"pId\", product.pId);\n  formData.append(\"pName\", product.pName);\n  formData.append(\"pDescription\", product.pDescription);\n  formData.append(\"pStatus\", product.pStatus);\n  formData.append(\"pCategory\", product.pCategory._id);\n  formData.append(\"pQuantity\", product.pQuantity);\n  formData.append(\"pPrice\", product.pPrice);\n  formData.append(\"pOffer\", product.pOffer);\n  formData.append(\"pImages\", product.pImages);\n  try {\n    let res = await axios.post(`${apiURL}/api/product/edit-product`, formData);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteProduct = async pId => {\n  try {\n    let res = await axios.post(`${apiURL}/api/product/delete-product`, {\n      pId\n    });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const productByCategory = async catId => {\n  try {\n    let res = await axios.post(`${apiURL}/api/product/product-by-category`, {\n      catId\n    });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const productByPrice = async price => {\n  try {\n    let res = await axios.post(`${apiURL}/api/product/product-by-price`, {\n      price\n    });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["axios","apiURL","process","env","REACT_APP_API_URL","getAllProduct","res","get","data","error","console","log","createPorductImage","_ref","pImage","formData","FormData","file","append","createProduct","_ref2","pName","pDescription","pStatus","pCategory","pQuantity","pPrice","pOffer","post","editProduct","product","pEditImages","pId","_id","pImages","deleteProduct","productByCategory","catId","productByPrice","price"],"sources":["C:/Users/Lenovo/Downloads/OrganEase-main/client/src/components/admin/products/FetchApi.js"],"sourcesContent":["import axios from \"axios\";\nconst apiURL = process.env.REACT_APP_API_URL;\n\nexport const getAllProduct = async () => {\n  try {\n    let res = await axios.get(`${apiURL}/api/product/all-product`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createPorductImage = async ({ pImage }) => {\n  /* Most important part for uploading multiple image  */\n  let formData = new FormData();\n  for (const file of pImage) {\n    formData.append(\"pImage\", file);\n  }\n  /* Most important part for uploading multiple image  */\n};\n\nexport const createProduct = async ({\n  pName,\n  pDescription,\n  pImage,\n  pStatus,\n  pCategory,\n  pQuantity,\n  pPrice,\n  pOffer,\n}) => {\n  /* Most important part for uploading multiple image  */\n  let formData = new FormData();\n  for (const file of pImage) {\n    formData.append(\"pImage\", file);\n  }\n  /* Most important part for uploading multiple image  */\n  formData.append(\"pName\", pName);\n  formData.append(\"pDescription\", pDescription);\n  formData.append(\"pStatus\", pStatus);\n  formData.append(\"pCategory\", pCategory);\n  formData.append(\"pQuantity\", pQuantity);\n  formData.append(\"pPrice\", pPrice);\n  formData.append(\"pOffer\", pOffer);\n\n  try {\n    let res = await axios.post(`${apiURL}/api/product/add-product`, formData);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const editProduct = async (product) => {\n  console.log(product);\n  /* Most important part for updating multiple image  */\n  let formData = new FormData();\n  if (product.pEditImages) {\n    for (const file of product.pEditImages) {\n      formData.append(\"pEditImages\", file);\n    }\n  }\n  /* Most important part for updating multiple image  */\n  formData.append(\"pId\", product.pId);\n  formData.append(\"pName\", product.pName);\n  formData.append(\"pDescription\", product.pDescription);\n  formData.append(\"pStatus\", product.pStatus);\n  formData.append(\"pCategory\", product.pCategory._id);\n  formData.append(\"pQuantity\", product.pQuantity);\n  formData.append(\"pPrice\", product.pPrice);\n  formData.append(\"pOffer\", product.pOffer);\n  formData.append(\"pImages\", product.pImages);\n\n  try {\n    let res = await axios.post(`${apiURL}/api/product/edit-product`, formData);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteProduct = async (pId) => {\n  try {\n    let res = await axios.post(`${apiURL}/api/product/delete-product`, { pId });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const productByCategory = async (catId) => {\n  try {\n    let res = await axios.post(`${apiURL}/api/product/product-by-category`, {\n      catId,\n    });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const productByPrice = async (price) => {\n  try {\n    let res = await axios.post(`${apiURL}/api/product/product-by-price`, {\n      price,\n    });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}